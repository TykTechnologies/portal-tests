name: UI Internal Portal Tests

on:
  workflow_dispatch:
    inputs:
      image_version:
        default: "v0.0.1-rc13"
        description: "Docker image version, like: v0.0.1-rc13"
        required: true

jobs:
  test:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        arch: [amd64]
        node-version: [15.x]
    runs-on: ${{ matrix.platform }}
    
    steps:
    - name: Install Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2.5.0
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Checkout of Framework
      uses: actions/checkout@v2
      with:
        path: portal-tests
        token: ${{ secrets.ORG_GH_TOKEN }}
        submodules: true
  
    - name: Starting Tyk Pro
      env:
        TYK_DB_LICENSEKEY: ${{secrets.DASH_LICENSE}}
        PORTAL_IMAGE_VERSION: ${{github.event.inputs.image_version}}
      run: |
        docker-compose -f ci/full_env.yml up -d
      working-directory: portal-tests


    - name: Install test dependecies
      run: |
        npm ci
      working-directory: portal-tests

    - name: Waiting for dockers
      run: |
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:3000/hello/)" != "200" ]]; do sleep 5 && echo "waiting for dashboard '$(date +"%T")'" && echo "$(curl localhost:3000/hello/)"; done
        while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8080)" != "200" ]]; do sleep 5 && echo "waiting for keycloak '$(date +"%T")'" && echo "$(curl localhost:8080)"; done
      timeout-minutes: 15  
    
    - name: Execute prerequisites
      run: |
          npm run headless-prerequisits
      working-directory: portal-tests

    - name: Execute UI tests
      id: test_execution
      run: |
        DOCKER_EXECUTION=true npm run headless-test
      working-directory: portal-tests
    
    - name: Archive UI test report
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: ui-test-report
        path: ./portal-tests/results/report/index.html
    
    - name: Slack notify
      if: ${{ always() }}
      run: |
        export GIT_BRANCH=$(git branch --show-current) 
        npm run notify-slack
      working-directory: portal-tests
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        WDIO_TEST_ENV: ${{ github.ref }} (commit used -> ${{ github.event.head_commit.message }})
        FRAMEWORK_REPO: ${{ github.repository }}
        EVENT_TRIGGER: ${{ github.event_name }} (${{ github.actor }})
        JOB_RUN_ID: ${{ github.run_id }}
        JOB_NAME: ${{ github.job }}

    - name: Comment on PR
      if: ${{ always() }} && github.event.issue.pull_request
      uses: mshick/add-pr-comment@v1
      with:
        message: |
          **UI tests result: ${{ steps.test_execution.outcome }}** ${{ env.STATUS }} 
          Branch used: ${{ github.ref }}
          Commit: ${{ github.event.after }} ${{ github.event.commits[0].message }}
          Triggered by: ${{ github.event_name }} (@${{ github.actor }})
          [Execution page](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
        repo-token: ${{ secrets.ORG_GH_TOKEN }}
        allow-repeats: true
      env:
        STATUS: "${{ steps.test_execution.outcome == 'success' && ':white_check_mark:' || ':no_entry_sign:' }}"